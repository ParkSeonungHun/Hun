CREATE OR REPLACE FUNCTION FN_DT_TMTOSEC(p_day NUMBER, p_tm CHAR)
RETURN NUMBER IS ret_sec NUMBER(10);

BEGIN
SELECT (p_day * 86400) + TO_NUMBER(TO_CHAR(TO_DATE(p_tm,
'HH24:MI:SS'), 'SSSSS')) INTO ret_sec
FROM DUAL;

RETURN (ret_sec);

END FN_DT_TMTOSEC;
/

SELECT TO_CHAR(TO_DATE('000315','HH24MISS'),'SSSSS')
FROM DUAL;

SELECT FN_DT_TMTOSEC(0, '070800'),
FN_DT_TMTOSEC(1, '002030'),
TO_CHAR(SYSDATE, 'HH24:MI:SS')AS CUR_TM,
FN_DT_TMTOSEC(0, TO_CHAR(SYSDATE, 'HH24MISS')) AS CUR_SEC
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_SECTOTM(p_sec NUMBER)
RETURN CHAR IS ret_tm CHAR(6);

BEGIN

SELECT (
LPAD(FLOOR(MOD(p_sec,86400)/3600),2,'0') ||
LPAD(FLOOR(MOD(MOD(p_sec,86400),3600)/60),2,'0') ||
LPAD(FLOOR(MOD(MOD(MOD(p_sec,86400),3600),60)),2,'0')
) INTO ret_tm
FROM DUAL;

RETURN (ret_tm);

END FN_DT_SECTOTM;
/

SELECT MOD(28500,86400)/3600
FROM DUAL;

SELECT FLOOR(MOD(28500,86400)/3600)
FROM DUAL;

SELECT LPAD(FLOOR(MOD(28500,86400)/3600),2,0)
FROM DUAL;

SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') AS CUR_TM,
FN_DT_SECTOTM(FN_DT_TMTOSEC(0,
TO_CHAR(SYSDATE, 'HH24MISS'))-300) AS MINUS_SEC,
FN_DT_SECTOTM(FN_DT_TMTOSEC(0,
TO_CHAR(SYSDATE, 'HH24MISS'))+300)AS PLUS_SEC
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_OFFSETTM(p_day NUMBER,
p_tm CHAR,
p_offset_sec NUMBER
)
RETURN CHAR IS ret_offset_tm CHAR(6);

BEGIN

SELECT(
LPAD(FLOOR(MOD(S1.SEC,86400)/3600),2,'0') ||
LPAD(FLOOR(MOD(MOD(S1.SEC,86400),3600)/60),2,'0') ||
LPAD(FLOOR(MOD(MOD(MOD(S1.SEC,86400),3600),60)),2,'0')
) INTO ret_offset_tm
FROM (
SELECT (p_day * 86400) + TO_NUMBER(TO_CHAR(TO_DATE(p_tm,
'HH24:MI:SS'),'SSSSS')) + (p_offset_sec) AS SEC
FROM DUAL
)S1;

RETURN (ret_offset_tm);

END FN_DT_OFFSETTM;
/

SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') AS CUR_TM,
FN_DT_OFFSETTM(0, TO_CHAR(SYSDATE, 'HH24:MI:SS'), -300)
AS MINUS_SEC,
FN_DT_OFFSETTM(0, TO_CHAR(SYSDATE, 'HH24:MI:SS'), 300)
AS PLUS_SEC
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_OFFSETTMDNO(p_day NUMBER,
p_tm CHAR,
p_offset_sec NUMBER
)
RETURN NUMBER IS ret_offset_dno NUMBER(3);

BEGIN

SELECT FLOOR(S1.SEC/86400) INTO ret_offset_dno
FROM (
SELECT (p_day * 86400) + TO_NUMBER(TO_CHAR(TO_DATE(p_tm,
'HH24:MI:SS'),'SSSSS')) + (p_offset_sec) AS SEC
FROM DUAL
)S1;

RETURN (ret_offset_dno);

END FN_DT_OFFSETTMDNO;
/

SELECT TO_CHAR(SYSDATE, 'HH24:MI:SS') AS CUR_TM,
FN_DT_OFFSETTMDNO(0, TO_CHAR(SYSDATE, 'HH24MISS'), -43200)
AS MINUS_DNO,
FN_DT_OFFSETTMDNO(0, TO_CHAR(SYSDATE, 'HH24MISS'), 43200)
AS PLUS_DNO
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_CNVDTFMT(p_dt CHAR)
RETURN CHAR IS ret_fmt_dt CHAR(10);

BEGIN

SELECT SUBSTR(p_dt,1,4) || '-' || SUBSTR(p_dt,5,2) || '-' ||
SUBSTR(p_dt,7,2) INTO ret_fmt_dt
FROM DUAL;

RETURN (ret_fmt_dt);

END FN_DT_CNVDTFMT;
/

SELECT FN_DT_CNVDTFMT('20190820')
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_CNVTMFMT(p_tm CHAR)
RETURN CHAR IS ret_fmt_tm CHAR(8);

BEGIN

SELECT DECODE(p_tm,NULL,NULL,SUBSTR(p_tm,1,2) || ':' ||
SUBSTR(p_tm,3,2) || ':' || SUBSTR(p_tm,5,2)) INTO ret_fmt_tm
FROM DUAL;

RETURN (ret_fmt_tm);

END FN_DT_CNVTMFMT;
/

SELECT FN_DT_CNVTMFMT('164530')
FROM DUAL;

SELECT FN_DT_CNVTMFMT(FN_DT_OFFSETTM(0, '234500', 3600))
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_DT_CNVDTTMFMT(p_dttm CHAR)
RETURN CHAR IS ret_fmt_dttm CHAR(23);

BEGIN

SELECT SUBSTR(p_dttm,1,4) || '-' || SUBSTR(p_dttm,5,2) || '-' ||
SUBSTR(p_dttm,7,2) || ' ' ||
SUBSTR(p_dttm,9,2) || ':' || SUBSTR(p_dttm,11,2) || ':' ||
SUBSTR(p_dttm,13,2) INTO ret_fmt_dttm
FROM DUAL;

RETURN (ret_fmt_dttm);

END FN_DT_CNVDTTMFMT;
/

SELECT FN_DT_CNVDTTMFMT('20190820070800')
FROM DUAL;

CREATE OR REPLACE FUNCTION FN_GET_STR_COUNT(p_str CHAR,
p_find_str CHAR)
RETURN NUMBER
IS
ret_sales_count NUMBER(3);
loc NUMBER(3);

BEGIN

ret_sales_count := 0;
loc := 1;

WHILE (1=1)
LOOP
loc := INSTR(p_str, p_find_str, loc);
EXIT WHEN loc = 0;

loc := loc + LENGTH(p_find_str);
ret_sales_count := ret_sales_count + 1;
END LOOP;

RETURN (ret_sales_count);
END FN_GET_STR_COUNT;
/

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'FUNCTION';

SELECT FN_GET_STR_COUNT('1Day SQL Example : 123 : 오라클',':')
FROM DUAL;

DROP FUNCTION FN_GET_STR_COUNT;

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'FUNCTION';

CREATE OR REPLACE PROCEDURE PR_INS_PNT_INFO(p_year CHAR)

IS
tot_sales_count NUMBER;

BEGIN

/*기존 포인트 정보 삭제*/
DELETE
FROM TB_POINT_INFO
WHERE YEAR = p_year;

/* 포인트 정보 입력 */
INSERT INTO TB_POINT_INFO
SELECT p_year AS YEAR,
RANK() OVER (ORDER BY SUM(POINT) DESC) AS RANK,
CUSTOMER_CD,
SUM(POINT) AS POINT,
SUBSTR(MAX(REG_DTTM),1,8) AS LAST_PNT_DT
FROM TB_POINT
WHERE SUBSTR(REG_DTTM,1,4) = p_year
GROUP BY CUSTOMER_CD;

/* 데이터베이스에 적용 */
COMMIT;

/* 출력메세지 */

SELECT COUNT(YEAR) INTO tot_sales_count
FROM TB_POINT_INFO
WHERE YEAR = p_year;

DBMS_OUTPUT.PUT_LINE('결과 : ' || p_year ||
' : ' || tot_sales_count || ' 개 포인트 정보 입력 완료');

/* 예외 처리 */
EXCEPTION WHEN OTHERS THEN

ROLLBACK;
DBMS_OUTPUT.PUT_LINE('겨과 : ' || p_year ||
' 포인트 입력 오류!!!');

END PR_INS_PNT_INFO;
/

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'PROCEDURE';

SET SERVEROUT ON;
EXEC PR_INS_PNT_INFO('2018')
SET SERVEROUT OFF;

CREATE OR REPLACE PROCEDURE PR_DSP_PNT_INFO(p_year CHAR)

IS
/* 커서 선언 */
CURSOR CUR_PNT_INFO(c_year IN VARCHAR2)
IS
SELECT YEAR,
RANK,
CUSTOMER_CD,
POINT,
LAST_POINT_DT
FROM TB_POINT_INFO
WHERE YEAR = c_year;

/* 프로시저 변수 */
n_tot_sales_count NUMBER;

BEGIN

n_tot_sales_count := 0;

DBMS_OUTPUT.PUT_LINE('---------------------------------');
DBMS_OUTPUT.PUT_LINE('포인트 통계 출력');
DBMS_OUTPUT.PUT_LINE('---------------------------------');

FOR ROW_INFO IN CUR_PNT_INFO(p_year)
LOOP
DBMS_OUTPUT.PUT_LINE(ROW_INFO.YEAR || ',' ||
ROW_INFO.RANK || ',' || ROW_INFO.CUSTOMER_CD || ',' ||
TO_CHAR(ROW_INFO.POINT, '999,999,9999') || ',' ||
FN_DT_CNVDTFMT(ROW_INFO.LAST_POINT_DT));
n_tot_sales_count := n_tot_sales_count + 1;
END LOOP;

IF (n_tot_sales_count > 0) THEN
DBMS_OUTPUT.PUT_LINE('--------------------------');
DBMS_OUTPUT.PUT_LINE('출력 고객:' || n_tot_sales_count);
ELSE
DBMS_OUTPUT.PUT_LINE('검색된 데이터가 없습니다.');
END IF;

END PR_DSP_PNT_INFO;
/

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'PROCEDURE';

SET SERVEROUT ON;
EXEC PR_DSP_PNT_INFO('2018')
SET SERVEROUT OFF;

DROP PROCEDURE PR_INS_PNT_INFO;
DROP PROCEDURE PR_DSP_PNT_INFO;

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'PROCEDURE';

CREATE OR REPLACE TRIGGER TG_DEL_CUST_INFO

BEFORE DELETE ON TB_CUSTOMER

FOR EACH ROW

BEGIN

DELETE TB_POINT
WHERE CUSTOMER_CD = :OLD.CUSTOMER_CD;

END TG_DEL_CUST_INFO;
/

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'TRIGGER'
AND OBJECT_NAME = 'TG_DEL_CUST_INFO';

SELECT * FROM TB_CUSTOMER WHERE CUSTOMER_CD = '2018087';
SELECT * FROM TB_POINT WHERE CUSTOMER_CD = '2018087';

DELETE
FROM TB_CUSTOMER
WHERE CUSTOMER_CD = '2018087';

SELECT * FROM TB_CUSTOMER WHERE CUSTOMER_CD = '2018087';
SELECT * FROM TB_POINT WHERE CUSTOMER_CD = '2018087';

DROP TRIGGER TG_DEL_CUST_INFO;

SELECT OBJECT_NAME,
OBJECT_TYPE,
CREATED,
STATUS
FROM USER_OBJECTS
WHERE OBJECT_TYPE = 'TRIGGER'
AND OBJECT_NAME = 'TG_DEL_CUST_INFO';
COMMIT;

CREATE SEQUENCE SEQ_PAN_SEQ_NO
START WITH 1
INCREMENT BY 1
MAXVALUE 9999999999
NOMINVALUE
NOCYCLE
NOCACHE;

SELECT SEQ_PAN_SEQ_NO.CURRVAL
FROM DUAL;

SELECT SEQ_PAN_SEQ_NO.NEXTVAL
FROM DUAL;

SELECT SEQ_PAN_SEQ_NO.CURRVAL
FROM DUAL;

INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'냉장고', '2018254',4);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'세탁기', '2019011',10);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'세탁기', '2019167',2);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'세탁기', '2019069',6);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'냉장고', '2018254',3);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'선풍기', '2019167',4);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'냉장고', '2019001',2);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'냉장고', '2019069',1);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'선풍기', '2018254',3);
INSERT INTO TB_SALES_09 VALUES (SEQ_PAN_SEQ_NO.NEXTVAL,'선풍기', '2019001',5);

SELECT *
FROM TB_SALES_09;

COMMIT;

DROP SEQUENCE SEQ_PAN_SEQ_NO;